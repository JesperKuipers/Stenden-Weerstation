<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        xuJOvmUklrfGgbFYh+d3jdrzKSSSZg//2Q==
</value>
  </data>
</root>